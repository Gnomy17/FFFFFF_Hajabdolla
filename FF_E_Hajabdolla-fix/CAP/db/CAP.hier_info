|clk_gen
clk1 <= q[0].DB_MAX_OUTPUT_PORT_TYPE
clk => counter32:inst.clock
aclr => counter32:inst.aclr
clk2 <= q[1].DB_MAX_OUTPUT_PORT_TYPE
clk4 <= q[2].DB_MAX_OUTPUT_PORT_TYPE
clk8 <= q[3].DB_MAX_OUTPUT_PORT_TYPE
clk16 <= q[4].DB_MAX_OUTPUT_PORT_TYPE
clk32 <= q[5].DB_MAX_OUTPUT_PORT_TYPE


|clk_gen|counter32:inst
aclr => aclr~0.IN1
clock => clock~0.IN1
q[0] <= lpm_counter:lpm_counter_component.q
q[1] <= lpm_counter:lpm_counter_component.q
q[2] <= lpm_counter:lpm_counter_component.q
q[3] <= lpm_counter:lpm_counter_component.q
q[4] <= lpm_counter:lpm_counter_component.q
q[5] <= lpm_counter:lpm_counter_component.q


|clk_gen|counter32:inst|lpm_counter:lpm_counter_component
clock => cntr_u3i:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => cntr_u3i:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_u3i:auto_generated.q[0]
q[1] <= cntr_u3i:auto_generated.q[1]
q[2] <= cntr_u3i:auto_generated.q[2]
q[3] <= cntr_u3i:auto_generated.q[3]
q[4] <= cntr_u3i:auto_generated.q[4]
q[5] <= cntr_u3i:auto_generated.q[5]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|clk_gen|counter32:inst|lpm_counter:lpm_counter_component|cntr_u3i:auto_generated
aclr => counter_reg_bit1a[5].ACLR
aclr => counter_reg_bit1a[4].ACLR
aclr => counter_reg_bit1a[3].ACLR
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT


